# 非线性结构，每个元素可以有多个前驱和后继
# 树是n(n>=0 ) 个元素集合。
#   n = 0 ，称为空树
#   树只有一个特殊的没有前驱的元素，称为树的根的root
#   树中除了根结点外，其余元素只能有一个前驱，可以有零个或多个后继
#   递归定义
#   树T 是n(n>= 0 ) 个元素的集合，n = 0 时，称为空树
#   有且只有一个特殊元素，剩余的元素都可以被划分m个互不相交的集合，t1,t2,t3,...tm，而每个集合都是树
#   称为集合是都是树，称为T是取取经，subtree
#   子树也是处自己的根
#   树的概念
#   结点，树中的数据元素。
#   结点的度degree,结点拥有的子树数目为度，记作 d(v)
#   叶子结点，结点的度为0，称为叶子结点的leaf ,终端的结点，未端结点
#   分支结点，结点的度不为0，称为非终端结点，或分支结点
#   分支，结点之间的关系。
#   内部结点，除根结点之间的关系，
#   内部结点，除了根结点之外的分支结点，当然也不包括叶子结点。
#   树的度是树内结点的度的最大值，D 结点的度的最大值是3，树的度就是3
#   树的概念：
#   孩子结点： 结点的子树的根结点成为孩子的结点的孩子
#   双亲结点：一个结点是它的各子结点的双亲
#   兄弟结点，具有相同的双亲结点
#   祖先结点： 从根结点到该结点经过的分支上的所有的结点,A,B,D都是G祖先结点
#   子孙结点：结点的所有的子树上的所有的结点都称为该结点的子孙，B 的子孙 是D,G,H,I
#   结点的层次（Level） :根结点为第一层，根的孩子是第二层，以此类推，记作L（v）
#   树的深度（高度Depth）:树的层次是最大值，上图的树的深度为4
#   堂兄弟：双亲在同一层的结点
#   有序树：结点的子树是有顺序的，（兄弟有大小，有先后次序），不能交换
#   无序树，结点的子树是有无序的，可以交换
#   路径，树中的k个结点n1,n2,...nk,满足ni是n(i+1)的双亲，成为一个n1 到nk的一个路径，就是一条线串下来的
#   前一个是后一个的父亲前驱结点
#   路径的长度= 路径上的结点的数-1 ，也是分支数
#   森林： m(m >= 0 )树不相交，的树的集合
#   对于结点而言，其子树的集合就是森林，A 结点的2棵子树的集合就是森林
#
#  树的特点
#   唯一的根
#   子树不相交
#   除了根以外，每个元素都只能有一个前驱，可以有零个或者多个后继
#   根结点没有双亲结点（前驱），叶子结点没有孩子结点（后继 ）
#   路径
#   二叉树
#   每个结点最多2棵子树
#   二叉树不存在度数大于2的结点
#   它是有序树，左子树，右子树是顺序的，不能交换次序
#   即使某个结点只有一棵子树，也要确定它是左子树，还是右子树
#   二叉树的五种基本形态
#   斜对
#   左子树：