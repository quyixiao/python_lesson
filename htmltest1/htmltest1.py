# 前端技术风云录
# HTML
# HTML 超文本标记语言，它不同于编程语言
# 超文本就是超出纯文本范畴，例如打桩文件的颜色，大小，字体等信息，
# 超文本需要显示 ，就得有软件能够呈现超文本定义的排版格式，例如显示图片，表格，显示字体，
# 1980年代，TIM Berners-Lee为CERN欧洲核子研究中心，当时欧洲最大的互联网节点，设计基于超文本思想的ENQUIRE项目
# ，以促进科研人员之间的信息共享和更新，1989年编写的信息化管理建义，一文，并构建基于Internet的Hypertext系统，并在CERN
# 开发了World Wide WEb 项目，打造了世界上的第一个网站，于1991年8月6号正式上线
# Tim Berners-Lee 于1990 年发明了每一个浏览器，还发明了HTTP 协义
# 1994 年MIT 他创建了W3C ，W3C 万维网联盟，负责万维网持续发展，他提出了W3C 的标准应该基于无专利权，无版本税
# Marc Andreessen 于1993年发明了Mosaic浏览器，看到了这个技术前景，不久后他成立自己的公司-网景Netscape ，1994 发布了Netscape Navigotor浏览器
# 最终后来居上
# 由于IE 的捆绑销售行为，网景的单一的浏览器市场萎缩，从1990年的90% 下降到2006年的1%
# 1999年网景被AOL收购，收购后不久，Netscape公开了浏览器代码，并创建了MOzilla组织，Mozilla组织使用Gecko引擎重写了浏览器
# Mozilla组织使用GEcko 引擎发布了几款浏览器，最终2004年更名为Firefox浏览器
# 2003年5月，网景被解散
# AOL 于2007年12月宣布停止支持Netscape浏览器
# Apple的Safari于2003发布了第一个测试版本
# 2008年Google的Chrome浏览器带来V8引擎横空出世
# 网景公司的技术
# HTTP Cookie ，解决HTTP无状态
# JavaScript
# SSL协义
# JAR格式文件，将Java的class文件打包压缩，并加上签名
# 2012年4月9日，微软以10亿5千购买800项美国在线的专利或专利授权，专家认为网景的SSL,Cookie等专利可能是微软愿意出高价的理由之一
# 摘自wiki百科
# 浏览器技术
# 浏览器是一种客户端，能基于HTTPS,FTP等协义和服务器进行交互，呈现给网页内容软件
# 可以简单的认为浏览器软件分为2个部分
# 外壳
#   外壳提供用户交互的界面
# 内核引擎Engine
# 提供HTML,CSS，图像的渲染引擎，提供DOM 编程接口
# 提供javaScript引擎
# Firefox       C++开发并最早开源，可以支持复杂的网页效果，提供了强大的浏览器扩展接口
# IE,AOL        早期未按照W3C标准实现，兼容性很差，IE9之后内核升级以符合标准
#               KDE 与1998年开发
# Presto    Opera   目前公认网页浏览速度最快的内核，但是牺牲了一部分兼容性
# WEbKit    Safari Chrome       WebKit 基于KHtml开发 ，网页浏览速度较快，但是网页容错性能不高
# Blink     基于WebKit WebCore
# 其他的国家的浏览器，一般都是采用了以上的实现了一个或者两个内核加上外壳实现
# JS引擎
# 不同的浏览器内核中使用不同的JS引擎，常见的JS引擎Jscript，TraceMonkey (Firefox) ,V8 等
# 这些引擎差异不小，实现ECMA标准不同，甚至有不按照标准来实现的
# 使用JQuery 等构架解决兼容性问题，抹平平台之间的差异
# JavaScript
# JS
# JavaScript 是JS 的简称，是一种动态的弱类型的脚本解释器语言，和HTML,CSS 并称为三大WEB核心技术，得到几乎主流浏览器支持
# 1994 年网景NEtScape 公司成立并发布了Netscape Navigator浏览器，占据了很大的市场份额，网景意识 到了WEB需要动态，需要一种技术
# 来实现
# 1995年9月网景浏览器2发布了测试版本发布了LiveScript ，随即在12月的测试版本就更名为JavaScript ，同时期，微软推出IE 支持JScript
# VBScript 与之抗衡
# 1997 年，网景，微软，SUN ,Borland公司和其他的组织在ECMA 确定了ECMAScript语言标准，JS 就成为了ECMAScript 标准的实现之一
# ES
# ECMAScript 是由ECMA 国际，前身是欧洲计算机制造协会英文名称是European Computer Manufacturers Association ) 通过ECMA-262
# 标准化的脚本程序言语设计，该语言的广泛的用户于互联网
# JavaScript 是商品名，目前商标权在Oracle 公司名手中，ES是标准名
# 根据ES标准，有很多的的实现引擎，其中包括JavaScript 或JSript ，它们都是ECMA-262 标准的实现和扩展
# 为什么之前浏览器兼容是个大问题
# HTML ,CSS ，JS 技术都在发展，标准版本很多，浏览器内嵌的引擎实现不太一致，甚至有不按照标准来实现，或者减少实现，或者改变
# 或者增加功能的实现，比如IE, 这就是导致开发人员的负担 ，很难做到一套代码可以兼容跑在多种浏览器中，甚至都不能跑在同一种浏览器的不同版本中
#1997年，制定了首个版本ECMA-262
# 1999年12月，，ES3 支持更加强大的正则表达式等
# Es4太激进，最终放弃
# 2009年，ES5发布，得到广泛支持，支持严格模式，支持Json
# 2015 年，Es6发布，引入非常多的新语言，还兼容旧版本特性，ES6之前按照版本号命名，从ES6开发使用年份版本号,ES6 是ECMASScript 2015
# 先得看上你的网站，浏览器兼容性问题， 这个问题，是一个比较好的解决方案，不同的版本，不同的浏览器，返回不同的页面，兼容性的东西
# 只能解决一部分，不能解决所有的问题，前端开发中最重要的标准，我ECMAScript ，
# V8 引擎
# 就在浏览器市场一家独大的时候，Firefox,chrome ，异军穿起
# 2008年9月2日，Google的chrome 浏览器发布，一并发布了Js引擎，V8使用BSD协义开源
# V8 引擎是使用C++开发，将JavaScript 编译成机器码，而不是字节码，还用很多的优敏方法提高了性能，因此，V8引擎速度非常的快
# v8引擎还可以独立运行，可以嵌入到其他的任何C++程序中
# V8 引擎的诞生，使得服务器端运行JS成为可能为方便事情
# 2009 年
# CSS(CASCADing Stype ，Sheets) 层叠样式表
# HTML 本身为了格式化显示文本，但是当网页呈现大家前面的时候，需求HTML提供了更多的样式的能力，这使得HTML变得越来越臃肿，这促进CSS诞生
# 1994年，W3C 成立，CSS设计小组所有的成员加入了W3C，并努力研发CSS的标准，微软最终加入
# 1996年12月发布了CSS1.0
# 1998年5月开发了CSS2.0
# CSS3 采用了模块思想，每个模块都在CSS2 基础上分别增强的功能，所以这些模块是陆续发布的
# 不同的厂家的浏览器使用的引擎，对CSS 的支持一样，导致网页的布局，样式在不同的浏览器不一样，想要 保证不同的用户使用不同的浏览器的网页效果
# 一直非常的困难
# 动态网页技术
# JS的引入使得浏览器可以显示动态效果，但这不是网页
# 发明WEB技术的初衷是为了分享文档，而这些内容是静态的，就是写好的不变的文件，通过URL定位到这些文档，将内容下载到浏览器上，由浏览器呈现
# 互联网发展，网民的需求增加，大家希望提供交互方式访问，用户提交需求，服务端找到需求匹配的资源并发加浏览器的显示 这就是动态网页
# 动态网页指的是网页的内容的动态，URL不变，里面的内容不段变化，例如访问一个查询页面，提交的关键字不同，下面的表格的内容变化，
# 动态网页，表现的是浏览器内容的变化，而本质上它是一种服务端动态网页技术，server-side dynamic web page
# 最早诞生的动态网页技术ASP,JSP,PHP 等，后面几乎所有的流行的高级语言都提供了开发动态网页的能力
# 网页布局
# 早期的网页只需要标题，使用<p> 标签分段
# 所有的人大量使用表格标签，可以做到很好的内容布局，也出现结构化布局方案，但是随着页面的内容的堆积，出现后来成百上千的表格嵌套的情况
# 浏览器绘制很慢
# 后来出现DIV+CSS布局风格，舍弃了表格，加上JS,使得前后端开发分离，而且可以做到很好的自适应布局，例如流式瀑布一样的布局
# 同步和异步
# 同步，
# 早期，网页就是一页页的文本，没有什么图片，样式
# 后来，互联网时代的到来，网页的内容越来越大
# 浏览器渲染HTML,需要先下载CSS加载为好的渲染网页，之后，下载网页的内容，并逐个的渲染，不要构建DOM树，加载JS 脚本并执行
# JS可能需要修改DOM,网页就需要新的渲染
# 如果JS入在网页HEAD中，还需要JS下载并加载
# 图片使用<img>标签，是发起的新的请求的，如果图片返回，需要重新绘制网页
# 好不容易，一张网页绘制完毕，用户提交了请求，就是想看到查询的结果，服务器响应到后来是一个全新的页面空，哪怕URl不变，整个网页都需要重新
# 渲染，例如用户填写信息，只是2次密码不一致，提交后，整个注册页面的重新刷新，所有的填写项目重新填写，当然有办法让用户减少重填写，这种交互
# 非常的不友好
# 代价的角度看，就是为了注册一点点信息，结果返回整个网页的内容，不带浪费了网络带宽，还需要浏览器重新渲染网页，太浪费资源
# 上面这些请求的过程，就是异步的过程，用户发起了请求页面整个刷新，直到服务器响应的数据到来并重新渲染
# 异步
# 1996年微软实现了iframe标签，可以在一个网页使用iframe 标签局部异步加载内容
# 1999年微软推出异步数据传输的ActiveX手推技术，太笨重了，但是也火了很多年，有一个组件 XMLHttpRequest 被大多数的浏览器支持
# AJAvX即 Asynchronous Javascript and XML 异步JavaScript 和XML 使用XMLHttpRequst 组件，结合JS,数据格式采用XML
# 可扩展标记语言，将这三个结合，实现网页的异步的请求，AJAax是一种技术组合，技术的重新发现，而不是发明，它的深远的影响了整个WEB开发
# 2005 年，Google 在Gmai和地图中应用了Ajax技术，使它大的受到欢迎并推广开来
# 有了异步请求，就可以动态的从浏览器发起请求到服务器，服务器返回响应的数据封装成XML,JSON 返回给浏览器，浏览器只需要使用JS 把内容
# 加入到DOM 中，局部的渲染就开始了，这个过程中，整个网页不用重新刷新，只需要局部动态改变就可以了
# 前端开发
# 早期前端开发使用的是网页三剑客，Dreamweaver,Firework,Flash,微软的有Frontpage
# 不管使用什么工具，都不能改变JS兼容，CSS兼容，浏览器版本兼容非常的头疼
# 2006年JQuery 库出现，出现了JS框架，抹平了平台差异，基于它产生了人多的插件，前端开发终于轻松些
# 2008年V8引擎伴随着Chrome浏览器发布
# 2009看ES5标准发布
# 2009 Nodejs发布，服务器端也可以使用JavaScript
# 2009年AngularJS诞生，之后被谷歌收购
# 2010看Backbone.js 诞生，
# 2011年React 和Ember诞生，React于2013年5月开源
# 2014 年国人尤雨 Vue.js 诞生
# 2014 年 HTML5 标准开发
# 硬件发展
# 最初，网页就是简单的文本，计算机轻松的胜任
# 后来，网页对多媒体的支持，动态效果的支持，都需要使用大量的CPU,内存资源，甚至是显示卡渲染的能力
# 所以，个人PC需要不断的升级，否则浏览网页很困难
# 移动互联网到来的早期，手机网页，都需要单独的处理
# 手机屏幕小，CPU 弱，内存小，能看网页纯文本加小图，这样产生的流量也小，2G时代谈不上网速
# 2007年告一段落IPhone诞生，2008年安卓手机诞生，3G的移动互联网时代到来了
# 手机硬件水平不断提升，手机开发平台让人多的开发APP,用户可以下载安装使用这些APP
# 对于开发者来说，开发就是这个问题了，是不是需要开发一套IPhone版本，再开发一套安卓，在开发一套网页的版本呢？
# 2013看，中国开始进入4G时代，手机硬件水平也得到了很大的提升
# 人多平台都在思考是否能够一套架构，解决所有的前端问题，使用的技术还是最能用的网页JS
# 如今的前端开发已经不是以前的JS文件，几百行代码了，为了适用需求，新框架，新编程模式不断的涌现，这些工具都大大的方便了协作开发
# 同时解决平台兼容性问题
# Nodejs
# Nodejs 是服务器端运行的JavaScript的开源，跨平台运行环境
# Nodejs 原始作者是瑞安，达尔，于2009年发布，使用了V8引擎，并采用事件驱动，非阻塞，异步的IO ,模型
# 2010 年,npm软件包管理诞生，通过它，可以方便的发布，分享Nodejs 的库和源代码
# Nodejs 4.0 引Es6语言特性
# 
